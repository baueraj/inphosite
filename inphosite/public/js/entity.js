var inpho = inpho || {};
inpho.entity = inpho.entity || {};

// Fills in blank sections with a label saying no data by cycling through all of the possible present divs. The last empty section says who to email to request data to be put in
function loadMore() {
  var ideas = ['instances', 'links', 'related_thinkers', 'related', 'occurrences', 'hyponyms'];
  var ideasHeaders = ['Instances', 'Links', 'Related Thinkers', 'Related Terms', 'Occurrences', 'Hyponyms'];
  var thinkers = ['related', 'related_ideas', 'influenced_by', 'influenced', 'teachers', 'students'];
  var thinkersHeaders = ['Related Thinkers', 'Related Terms', 'Influenced By', 'Influenced', 'Teachers', 'Students'];
  var types  = ['<a href="https://inpho.cogs.indiana.edu/papers/#JCDL2007-abstract"><i class="fa fa-cog pull-right" style="color:#333333" data-toggle="tooltip" title="List generated by statistical methods, for further details click on the gear icon" data-placement="right"></i></a>',
                '<a href="https://inpho.cogs.indiana.edu/papers/#Hypertext2009-abstract"><i class="fa fa-cog pull-right" style="color:#0033CC" data-toggle="tooltip" title="List generated by various sources, including manual data entry and DBpedia, for further details click on the gear icon" data-placement="right"></i></a>',
                '<a href="https://inpho.cogs.indiana.edu/papers/#FLAIRS2008-abstract"<i class="fa fa-cog pull-right" style="color:#CC0000; text-decoration:none;" data-toggle="tooltip" title="List generated by machine reasoning over human feedback, for further details click on the gear icon" data-placement="right"</i></a>'];
  var ideasInfo = [2, 2, 0, 0, 0, 0];
  var thinkersInfo = [0, 0, 1, 1, 1, 1];
  var columns = ['1', '1', '2', '2', '1', '1', '2', '2', '1', '1', '2', '2'];
  var rows = ['1', '2', '1', '2', '3', '4', '3', '4', '5', '6', '5', '6'];
  var check = document.title.includes('Idea');
  var par = document.getElementsByClassName('tilecontainer');
  par = par[0];
  var i;
  var id;
  var child;
  var header;
  var add = null;
  var list = ["", "", "", "", "", ""];
  var m = 0;
  var text = "";
  for (i = 0; i < ideas.length; i++) {
    if ((document.getElementById(ideas[i]) != null && check) || (document.getElementById(thinkers[i]) != null)) break;
    if (i == 5) return;
  }
  if (check) {
    for (i = 0; i < ideas.length; i++) {
      id = document.getElementById(ideas[i]);
      if (id == null) {
        child = document.createElement('div');
        child.className = 'terms entityclass ' + ideas[i] + 'Header';
        child.id = ideas[i];
        child.innerHTML = '<h3>' + ideasHeaders[i] + types[ideasInfo[i]] + '</h3>';
        par.appendChild(child);
        child = document.createElement('div');
        add = child;
        list[m] = ideasHeaders[i];
        m++;
        child.className = 'terms entityclass ' + ideas[i] + 'Content content';
        child.id = ideas[i];
        child.innerHTML = '<p align="center">No data</p>';
        child.style.paddingLeft = '13px';
        child.style.paddingRight = '13px';
        par.appendChild(child);
      }
      $("." + ideas[i] + 'Header').css('grid-column', columns[i * 2]);
      $("." + ideas[i] + 'Header').css('grid-row', rows[i * 2]);
      $("." + ideas[i] + 'Content').css('grid-column', columns[(i * 2) + 1]);
      $("." + ideas[i] + 'Content').css('grid-row', rows[(i * 2) + 1]);
      $("." + ideas[i] + 'Content').css('overflow', 'auto');
    }
  } else {
    for (i = 0; i < thinkers.length; i++) {
      id = document.getElementById(thinkers[i]);
      if (id == null) {
        child = document.createElement('div');
        child.className = 'terms entityclass ' + thinkers[i] + 'Header';
        child.id = thinkers[i];
        child.innerHTML = '<h3>' + thinkersHeaders[i] + types[thinkersInfo[i]] + '</h3>';
        par.appendChild(child);
        child = document.createElement('div');
        add = child;
        list[m] = thinkersHeaders[i];
        m++;
        child.className = 'terms entityclass ' + thinkers[i] + 'Content content';
        child.id = thinkers[i];
        child.innerHTML = '<p align="center">No data</p>';
        child.style.paddingLeft = '13px';
        child.style.paddingRight = '13px';
        par.appendChild(child);
      }
      $("." + thinkers[i] + 'Header').css('grid-column', columns[i * 2]);
      $("." + thinkers[i] + 'Header').css('grid-row', rows[i * 2]);
      $("." + thinkers[i] + 'Content').css('grid-column', columns[(i * 2) + 1]);
      $("." + thinkers[i] + 'Content').css('grid-row', rows[(i * 2) + 1]);
      $("." + thinkers[i] + 'Content').css('overflow', 'auto');
    }
  }

  //Handles formatting of message in the last empty section if thers is one
  if (m == 1)
    add.innerHTML = '<p align="center">Currently we have no data for ' + list[0] + '. If you have suggestions, please send them to <strong>inpho@inphoproject.org</strong></p>';
  if (m == 4)
    add.innerHTML = '<p align="center">Currently we are experiencing technical difficulties so some data may not be displayed.</p>';
  if (m > 1 && m < 4) {
    for (i = 0; i < m - 1; i++) {
      text += list[i] + ", ";
    }
    text += "and " + list[i];
    add.innerHTML = '<p align="center">Currently we have no data for ' + text + '. If you have suggestions, please send them to <strong>inpho@inphoproject.org</string></p>';
  }
}

inpho.entity.showMore = function (attr, id, n, start) {
  // build url to grab attribute
  var url = $('#' + attr).attr('data-source');
  url += "?limit=" + n + "&start=" + start;

  // get attribute data
  $.getJSON(url, function (data) {
    // append each item to the list
    for (i in data.responseData.results) {
      var idea = data.responseData.results[i];
      var item = '<li>'
        + ' <a onClick="inpho.tabnav.appendTab(\'tabnav\', \'i'+ idea.ID +'\', \''+ idea.label + '\', \'/entity/' + idea.ID + '/panel/' + id + '\')" href="#i'+ idea.ID + '" data-toggle="tab" class="tablink"><i class="icon-search" data-toggle="tooltip" title="Search for '+ idea.label + ' and ' + $("#label").text() + ' on SEP and Noesis"></i></a> ';

      // SEP link opens in new tab
      if (idea.sep_dir != undefined && idea.sep_dir != '')
      item += '<a href="http://plato.stanford.edu/entries/' + idea.sep_dir + '" data-toggle="tooltip" title="'+idea.label+' on the Stanford Encyclopedia of Philosophy" data-placement="right" class="pull-right" target="_blank"><img src="/img/sepmanicon.png" class="pull-right" /></a>';
      else item += '<img src="/img/empty.gif" class="pull-right" width="16" />';

      // Wiki link opens in new tab
      if (idea.wiki != undefined && idea.wiki != '')
        item += '<a href="http://wikipedia.org/wiki/' + idea.wiki + '" class="pull-right" data-toggle="tooltip" title="'+idea.label+' on Wikipedia" target="_blank"><img src="/img/wikiicon.png" class="pull-right" /></a>';
      else item += '<img src="/img/empty.gif" class="pull-right" width="16" />';


      item += '<a href="' + idea.url + '" data-toggle="tooltip" title="'+idea.label+' on InPhO">' + idea.label + '</a>';
      item += '</li>';
      $('#' + attr + ' ol .more').before(item);
      $('#'+attr+' [data-toggle="tooltip"]').tooltip();
    }

    // if there are still more entries, correct the "show more" button,
    // otherwise remove the "show more" button.
    if (data.responseData.total > (start + n)) {
      var onClick =  "inpho.entity.showMore('"+attr+"', " + id + ", " + n + ", " + (start + n) + ")";
      $('#' + attr + ' ol .more a').attr('onClick', onClick);
      $('#' + attr + ' ol .more a').text('Show moreâ€¦ (' + (data.responseData.total - start - n) + ')');
    } else {
      $('#' + attr + ' ol .more').remove();
    }
  });
}
